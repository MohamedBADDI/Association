<?php

namespace Ben\AssociationBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ReservationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReservationRepository extends EntityRepository
{
    public function search($searchParam) {
        extract($searchParam);         
       $qb = $this->createQueryBuilder('r')
                ->leftJoin('r.room', 'room')
                ->addSelect('room')
                ->leftJoin('room.hotel', 'hotel')
                ->addSelect('hotel')
                ->leftJoin('r.user', 'u')
                ->addSelect('u')
                ->leftJoin('u.profile', 'p')
                ->addSelect('p')
                ->andWhere('u.username like :keyword or p.first_name like :keyword or p.family_name like :keyword or hotel.name like :keyword ')
                ->setParameter('keyword', '%'.$keyword.'%')
                ->orderBy('r.date_from', 'DESC');
        if(!empty($group)){
        	$qb->leftJoin('u.groups', 'g')
            ->andWhere('g.id = :group')->setParameter('group', $group);
        }
        if(!empty($date)){
            $date = explode("-",$date);
            $qb->andWhere('r.date_from between :d1 and :d2')
            ->setParameter('d1', $date[0])
            ->setParameter('d2', $date[1]);
        }
        $qb->setFirstResult(($page - 1) * $perPage)
        ->setMaxResults($perPage);
        
       return new Paginator($qb->getQuery());
    }

    public function counter() {
        $qb = $this->createQueryBuilder('r')->select('COUNT(r)');
        return $qb->getQuery()->getSingleScalarResult();
    }
	
}
