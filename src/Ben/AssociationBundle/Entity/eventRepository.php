<?php

namespace Ben\AssociationBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * eventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class eventRepository extends EntityRepository
{
    public function findSome($nombreParPage, $page, $keyword, $group, $dateFrom, $dateTo) {       
       $qb = $this->createQueryBuilder('e')
                ->leftJoin('e.groups', 'g')
                ->addSelect('g')
                ->andWhere('e.name like :keyword or e.description like :keyword or e.type like :keyword')
                ->setParameter('keyword', '%'.$keyword.'%');
        if($group)
            $qb->andWhere('g.id = :group')->setParameter('group', $group);
        if($dateFrom)
            $qb->andWhere('e.date_from >= :dateFrom')->setParameter('dateFrom', $dateFrom);
        if($dateTo)
            $qb->andWhere('e.date_to <= :dateTo')->setParameter('dateTo', $dateTo);
        $qb->setFirstResult(($page - 1) * $nombreParPage)
        ->setMaxResults($nombreParPage);
        
       return new Paginator($qb->getQuery());
    }
    
    public function counter() {
        $query = $this->_em->createQuery('SELECT count(e) FROM ben\AssociationBundle\Entity\event e');
        return $query->getOneOrNullResult();
    }
}
